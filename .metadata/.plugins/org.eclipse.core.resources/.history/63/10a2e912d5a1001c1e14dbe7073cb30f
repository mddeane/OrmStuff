package com.revature.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.time.Instant;
import java.util.ArrayList;
import java.util.List;

import com.revature.util.ConnectionUtil;

public class TableDao {

	Connection conn = ConnectionUtil.getConnection();
	
	private String schemaName = "markd";
	private String randomNumber = Instant.now().toEpochMilli() + "_" + (Math.random() * 2147483647);
	private String tableName = "users_" + randomNumber;
	
	
	
	public int createTable(table) {
		int result = 0;
		

		List<String> columns = new ArrayList<String>();
		columns.add("id");
		columns.add("username");
		columns.add("pwd");
		columns.add("user_role_name");
		
		ArrayList<String> columnTypes = new ArrayList<String>();
		ArrayList<ArrayList<String>> columnConstraints = new ArrayList<ArrayList<String>>();
		

		ArrayList<String> col1Constraints = new ArrayList<String>();
		ArrayList<String> col2Constraints = new ArrayList<String>();
		ArrayList<String> col3Constraints = new ArrayList<String>();
		ArrayList<String> col4Constraints = new ArrayList<String>();

		columnTypes.add("SERIAL");
		columnTypes.add("VARCHAR(50)");
		columnTypes.add("VARCHAR(50)");
		columnTypes.add("markd.user_role");

		col1Constraints.add("PRIMARY KEY");

		col2Constraints.add("NOT NULL");
		col2Constraints.add("UNIQUE");

		col3Constraints.add("NOT NULL");
		
		col4Constraints.add("");
		
		columnConstraints.add(col1Constraints);
		columnConstraints.add(col2Constraints);
		columnConstraints.add(col3Constraints);
		columnConstraints.add(col4Constraints);
		
		// create table
		
		String sql = "DROP TABLE IF EXISTS " + schemaName + "."+ tableName + " CASCADE;\r\n"
				+ "CREATE TABLE "+ schemaName + "." + tableName + "("
				+ columns.get(0) + " " + columnTypes.get(0) + " " + (columnConstraints.get(0).toString().replace(",", "").replace("[","").replace("]", "")) + ", " 
				+ columns.get(1) + " " + columnTypes.get(1) + " " + (columnConstraints.get(1).toString().replace(",", "").replace("[","").replace("]", "")) + ", " 
				+ columns.get(2) + " " + columnTypes.get(2) + " " + (columnConstraints.get(2).toString().replace(",", "").replace("[","").replace("]", "")) + ", " 
				+ "user_role_name markd.user_role NOT NULL)";

//		for(int i = 0; i<columns.size(); i++) {
//			System.out.println(columnTypes.get(i).substring(0,4));
//		}

		try {
			PreparedStatement stmt = conn.prepareStatement(sql);
			System.out.println(stmt);
			stmt.executeUpdate();
			
		} catch(SQLException e) {
			e.printStackTrace();
		}
		
		return result;

	}
}
